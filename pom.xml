<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.codemonkey.shibbotle</groupId>
	<artifactId>shibbotle</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<properties>
		<java-version>1.8</java-version>
		<org.springframework-version>4.1.1.RELEASE</org.springframework-version>
		<spring.security.version>3.2.7.RELEASE</spring.security.version>
		<org.hibernate-version>4.3.6.Final</org.hibernate-version>
		<jackson-version>2.9.9</jackson-version>
		<aspectj.version>1.7.4</aspectj.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<sonar.language>java</sonar.language>
		<build-db-phase>process-test-resources</build-db-phase>
		<base.name>shibbotle</base.name>
		<jdbc.url>jdbc:mysql://localhost:3306/</jdbc.url>
		<userName>shibbotle</userName>
		<password>shibbotle</password>
		<pool.initialSize>0</pool.initialSize>
		<pool.maxActive>8</pool.maxActive>
		<pool.maxIdle>8</pool.maxIdle>
		<db.init.schema>db/scripts</db.init.schema>
		<db.init.data>db/scripts</db.init.data>
	</properties>

	<pluginRepositories>
		<pluginRepository>
	        <id>maven-db-plugin-repo</id>
	        <name>maven db plugin repository</name>
	        <url>http://maven-db-plugin.googlecode.com/svn/maven/repo</url>
	        <layout>default</layout>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>

		<!-- Javax Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>4.1.2.RELEASE</version>
			<scope>test</scope>
		</dependency>

		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${aspectj.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjtools</artifactId>
			<version>${aspectj.version}</version>
		</dependency>

		<!-- Jackson -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson-version}</version>
		</dependency>

		<!-- Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${org.hibernate-version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${org.hibernate-version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-envers</artifactId>
			<version>${org.hibernate-version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>5.1.0.Final</version>
		</dependency>

		<!-- MySQL -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.26</version>
		</dependency>

		<!-- Tomcat -->
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-dbcp</artifactId>
			<version>8.0.15</version>
		</dependency>

		<!-- CDI -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>

		<!-- Log4j -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-web</artifactId>
			<version>2.1</version>
		</dependency>

		<!-- Tests -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.10.16</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>1.8.0.10</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.googlecode.catch-exception</groupId>
			<artifactId>catch-exception</artifactId>
			<version>1.2.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>1.6.2</version>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>1.6.2</version>
		</dependency>

		<!-- Apache commons libs -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.3.2</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.3</version>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.9.2</version>
		</dependency>

		<!-- Fremarker -->
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>2.3.21</version>
		</dependency>

		<!-- Amazon S3 -->
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-s3</artifactId>
			<version>1.9.0</version>
		</dependency>

		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security.version}</version>
		</dependency>

		<!-- Email Sender -->
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.7</version>
		</dependency>

		<!-- DynamicReports -->
		<dependency>
			<groupId>net.sourceforge.dynamicreports</groupId>
			<artifactId>dynamicreports-core</artifactId>
			<version>4.0.0</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.dynamicreports</groupId>
			<artifactId>dynamicreports-adhoc</artifactId>
			<version>4.0.0</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.dynamicreports</groupId>
			<artifactId>dynamicreports-googlecharts</artifactId>
			<version>4.0.0</version>
		</dependency>

		<!-- Apache Poi -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.12</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.12</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<!-- Maven Compiler -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>${java-version}</source>
					<target>${java-version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<!-- Maven Sonar -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>2.5</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.sonar-plugins</groupId>
				<artifactId>maven-report</artifactId>
				<version>2.7</version>
			</plugin>

			<!-- Maven DB Plugin -->
			<plugin>
				<groupId>com.googlecode</groupId>
				<artifactId>maven-db-plugin</artifactId>
				<version>1.4</version>
				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>5.1.26</version>
					</dependency>
				</dependencies>
				<configuration>
					<adminDbConnectionSettings>
						<jdbcDriver>com.mysql.jdbc.Driver</jdbcDriver>
						<jdbcUrl>${jdbc.url}</jdbcUrl>
						<userName>shibbotle</userName>
						<password>shibbotle</password>
					</adminDbConnectionSettings>
					<appDbConnectionSettings>
						<jdbcDriver>com.mysql.jdbc.Driver</jdbcDriver>
						<jdbcUrl>${jdbc.url}${base.name}</jdbcUrl>
						<userName>shibbotle</userName>
						<password>shibbotle</password>
					</appDbConnectionSettings>
					<dbDropStatements>
						SET foreign_key_checks = 0;
						drop database if exists ${base.name};
					</dbDropStatements>
					<dbCreateStatements>create database ${base.name};</dbCreateStatements>
					<dbUpdateScriptsDirectory>
						<!-- 1.0.0 db scripts -->
						<param>${db.init.schema}/1.0.0</param>
						<!-- init-data scripts -->
						<param>${db.init.data}</param>
					</dbUpdateScriptsDirectory>
					<scriptEncoding>UTF-8</scriptEncoding>
				</configuration>

				<executions>
					<execution>
						<phase>${build-db-phase}</phase>
						<goals>
							<goal>drop</goal>
							<goal>create</goal>
							<goal>update</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- CSS and JS Minifier -->
			<plugin>
				<groupId>com.samaxes.maven</groupId>
				<artifactId>minify-maven-plugin</artifactId>
				<version>1.7.4</version>
				<executions>
					<execution>
						<id>default-minify</id>
						<configuration>
							<webappSourceDir>${basedir}/src/main/webapp/resources</webappSourceDir>
							<webappTargetDir>${project.build.directory}/${project.build.finalName}/resources</webappTargetDir>
							<cssSourceIncludes>
								<cssSourceInclude>**</cssSourceInclude>
							</cssSourceIncludes>
							<cssSourceExcludes>
								<cssSourceExclude>**/*.min.css</cssSourceExclude>
								<cssSourceExclude>**/*.png</cssSourceExclude>
								<cssSourceExclude>**/*.jpg</cssSourceExclude>
							</cssSourceExcludes>
							<jsSourceIncludes>
								<jsSourceInclude>**</jsSourceInclude>
							</jsSourceIncludes>
							<jsSourceExcludes>
								<jsSourceExclude>**/*.min.js</jsSourceExclude>
							</jsSourceExcludes>
							<charset>UTF-8</charset>
							<jsEngine>CLOSURE</jsEngine>
							<closureLanguage>ECMASCRIPT5</closureLanguage>
							<skipMerge>true</skipMerge>
							<nosuffix>true</nosuffix>
							<closureAngularPass>true</closureAngularPass>
						</configuration>
						<phase>package</phase>
						<goals>
							<goal>minify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- WAR packing -->
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<id>package-default</id>
						<phase>package</phase>
						<goals>
							<goal>war</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>


		<!-- RESOURCE FILTER -->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.xml</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>
		</resources>

		<!-- Configuration needed to add goals on a lifecycle step -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>

								<!-- Maven DB Build -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.googlecode</groupId>
										<artifactId>maven-db-plugin</artifactId>
										<versionRange> [1.4,)</versionRange>
										<!-- Explaining the goals to be used -->
										<goals>
											<goal>drop</goal>
											<goal>create</goal>
											<goal>update</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>

							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>